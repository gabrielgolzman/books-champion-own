{"version":3,"sources":["components/context/AuthenticationContext/authentication.context.js","components/context/AuthenticationContext/theme.context.js","components/form/Login.js","components/books/ReadDate.js","components/ui/BookCard.js","components/books/BookItem.js","components/books/BooksList.js","components/books/BooksFilter.js","components/goal-bar/GoalBar.js","components/goal-bar/GoalRead.js","components/books/Books.js","components/form/BookForm.js","components/form/NewBook.js","components/context/AuthenticationContext/api.context.js","components/ui/Spinner.js","Dashboard.js","components/security/Protected.js","components/errors/PageNotFound.js","App.js","index.js"],"names":["AuthenticationContext","createContext","userValue","JSON","parse","localStorage","getItem","AuthenticationContextProvider","children","useState","user","setUser","Provider","value","handleLogin","email","setItem","stringify","handleLogout","removeItem","ThemeContext","ThemeContextProvider","theme","setTheme","toggleTheme","Login","onLogin","setEmail","password","setPassword","useContext","navigate","useNavigate","emailRef","useRef","passwordRef","className","onChange","e","current","style","borderColor","outline","target","placeholder","type","ref","onClick","length","focus","Button","ReadDate","date","console","log","year","getFullYear","month","toLocaleString","day","getUTCDate","BookCard","BookItem","title","author","dateRead","pageCount","BooksList","books","filterYear","map","book","id","BooksFilter","memo","onFilterYear","event","GoalBar","maxValue","barFillHeight","Math","round","width","GoalRead","maxRead","onMaxRead","step","Books","yearSelected","setYearSelected","setMaxRead","useCallback","filteredBooks","filter","toString","max","initialBookForm","formValid","bookFormReducer","state","action","BookForm","onBookDataSaved","onToggleForm","useReducer","bookForm","dispatch","min","disabled","preventDefault","bookData","Date","NewBook","onBookAdded","showForm","setShowForm","toggleShowForm","enteredBookData","random","APIContext","APIContextProvider","isLoading","setIsLoading","toggleLoading","Spinner","Dashboard","onSignOut","setBooks","username","split","addedBookHandler","dateString","toISOString","slice","fetch","method","headers","body","parseInt","then","response","ok","json","Error","newBooksArray","catch","error","useEffect","Accept","booksMapped","Row","Col","md","variant","Protected","to","replace","PageNotFound","App","router","createBrowserRouter","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0df41043.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const AuthenticationContext = createContext();\r\n\r\nconst userValue = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nexport const AuthenticationContextProvider = ({ children }) => {\r\n  const [user, setUser] = useState(userValue);\r\n\r\n  const handleLogin = (email) => {\r\n    localStorage.setItem(\"user\", JSON.stringify({ email }));\r\n    setUser({ email });\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthenticationContext.Provider value={{ user, handleLogin, handleLogout }}>\r\n      {children}\r\n    </AuthenticationContext.Provider>\r\n  );\r\n};\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeContextProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n\r\n  const toggleTheme = () => {\r\n    if (theme === \"light\") {\r\n      setTheme(\"dark\");\r\n    } else {\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useRef, useState } from \"react\";\r\n\r\nimport \"./Login.css\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { AuthenticationContext } from \"../context/AuthenticationContext/authentication.context\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { ThemeContext } from \"../context/AuthenticationContext/theme.context\";\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const { handleLogin } = useContext(AuthenticationContext);\r\n  const { toggleTheme, theme } = useContext(ThemeContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  const emailChangeHandler = (e) => {\r\n    emailRef.current.style.borderColor = \"\";\r\n    emailRef.current.style.outline = \"\";\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const passwordChangeHandler = (e) => {\r\n    passwordRef.current.style.borderColor = \"\";\r\n    passwordRef.current.style.outline = \"\";\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const signInClicked = () => {\r\n    if (emailRef.current.value.length === 0) {\r\n      emailRef.current.focus();\r\n      emailRef.current.style.borderColor = \"red\";\r\n      emailRef.current.style.outline = \"none\";\r\n      return;\r\n    }\r\n\r\n    if (password.length === 0) {\r\n      passwordRef.current.focus();\r\n      passwordRef.current.style.borderColor = \"red\";\r\n      passwordRef.current.style.outline = \"none\";\r\n      return;\r\n    }\r\n    handleLogin(email);\r\n    navigate(\"/home\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className={`login-box ${theme === \"dark\" && \"login-box-dark\"}`}>\r\n        <h4>¡Bienvenidos a Book Champions!</h4>\r\n        <div className=\"input-container\">\r\n          <input\r\n            className=\"input-control\"\r\n            onChange={emailChangeHandler}\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            ref={emailRef}\r\n          />\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <input\r\n            className=\"input-control\"\r\n            onChange={passwordChangeHandler}\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            ref={passwordRef}\r\n          />\r\n        </div>\r\n        <button\r\n          onClick={signInClicked}\r\n          className=\"signin-button mb-4\"\r\n          type=\"button\"\r\n        >\r\n          Iniciar sesión\r\n        </button>\r\n        <Button onClick={toggleTheme}>Cambiar tema</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { memo } from \"react\";\r\nimport \"./ReadDate.css\";\r\n\r\nconst ReadDate = ({ date }) => {\r\n  console.log(\"In ReadDate\");\r\n  const year = date.getFullYear();\r\n  const month = date.toLocaleString(\"es-AR\", { month: \"long\" });\r\n  const day = date.getUTCDate();\r\n  return (\r\n    <div className=\"date-container\">\r\n      <div>{year}</div>\r\n      <div>{month}</div>\r\n      <div>{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReadDate;\r\n","import './BookCard.css';\r\n\r\nconst BookCard = ({ children }) => {\r\n   return <div className=\"book-item-container\">{children}</div>;\r\n};\r\n\r\nexport default BookCard;\r\n","import './BookItem.css';\r\n\r\nimport ReadDate from './ReadDate';\r\nimport BookCard from '../ui/BookCard';\r\n\r\nconst BookItem = ({ title, author, dateRead, pageCount }) => {\r\n   return (\r\n      <BookCard>\r\n         <h2>{title}</h2>\r\n         <h3>{author}</h3>\r\n         <ReadDate date={dateRead} />\r\n         <p>{pageCount} páginas</p>\r\n      </BookCard>\r\n   );\r\n};\r\n\r\nexport default BookItem;\r\n","import \"./BooksList.css\";\r\n\r\nimport BookItem from \"./BookItem\";\r\n\r\nconst BooksList = ({ books, filterYear }) => {\r\n  if (books.length === 0) {\r\n    return (\r\n      <h2 className=\"no-books-read\">¡No leíste libros en {filterYear}!</h2>\r\n    );\r\n  }\r\n\r\n  return books.map((book) => (\r\n    <BookItem\r\n      key={book.id}\r\n      title={book.title}\r\n      author={book.author}\r\n      pageCount={book.pageCount}\r\n      dateRead={book.dateRead}\r\n    />\r\n  ));\r\n};\r\n\r\nexport default BooksList;\r\n","import { memo } from \"react\";\r\nimport \"./BooksFilter.css\";\r\n\r\nconst BooksFilter = memo(({ filterYear, onFilterYear }) => {\r\n  console.log(\"In BookFilter\");\r\n  const onYearSelected = (event) => {\r\n    onFilterYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Books-filter\">\r\n      <div className=\"Books-filter__control\">\r\n        <select value={filterYear} onChange={onYearSelected}>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default BooksFilter;\r\n","import './GoalBar.css';\r\n\r\nconst GoalBar = ({ value, maxValue }) => {\r\n   let barFillHeight = '0%';\r\n\r\n   if (maxValue > 0) {\r\n      barFillHeight = Math.round((value / maxValue) * 100) + '%';\r\n      console.log(barFillHeight);\r\n   }\r\n\r\n   return (\r\n      <div className=\"chart-bar\">\r\n         <div className=\"chart-bar__inner\">\r\n            <div\r\n               className=\"chart-bar__fill\"\r\n               style={{ width: barFillHeight }}\r\n            ></div>\r\n         </div>\r\n         <div className=\"chart-bar__label\">Libros leidos</div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default GoalBar;\r\n","import './GoalRead.css';\r\n\r\nconst GoalRead = ({ maxRead, onMaxRead }) => {\r\n   const onMaxChanged = (event) => {\r\n      onMaxRead(event.target.value);\r\n   };\r\n\r\n   return (\r\n      <form>\r\n         <label>Registrar nuevo objetivo de lectura</label>\r\n         <input\r\n            className=\"new-max-read-control\"\r\n            onChange={onMaxChanged}\r\n            type=\"number\"\r\n            step=\"1\"\r\n            value={maxRead}\r\n         />\r\n      </form>\r\n   );\r\n};\r\n\r\nexport default GoalRead;\r\n","import { memo, useCallback, useState } from \"react\";\r\n\r\nimport \"./Books.css\";\r\n\r\nimport BooksList from \"./BooksList\";\r\nimport BooksFilter from \"./BooksFilter\";\r\nimport GoalBar from \"../goal-bar/GoalBar\";\r\nimport GoalRead from \"../goal-bar/GoalRead\";\r\n\r\nconst Books = memo(({ books }) => {\r\n  console.log(\"In Books\");\r\n  const [yearSelected, setYearSelected] = useState(\"2021\");\r\n  const [maxRead, setMaxRead] = useState(7);\r\n\r\n  const onFilterYear = useCallback((year) => {\r\n    setYearSelected(year);\r\n  }, []);\r\n\r\n  const onMaxRead = (max) => {\r\n    setMaxRead(max);\r\n  };\r\n\r\n  const filteredBooks = books.filter(\r\n    (book) => book.dateRead.getFullYear().toString() === yearSelected\r\n  );\r\n\r\n  if (!books.length) return <p>No hay lecturas disponibles</p>;\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <GoalRead maxRead={maxRead} onMaxRead={onMaxRead} />\r\n        <GoalBar value={filteredBooks.length} maxValue={maxRead} />\r\n        <BooksFilter filterYear={yearSelected} onFilterYear={onFilterYear} />\r\n      </div>\r\n      <div className=\"books-container books-container-dark\">\r\n        <BooksList books={filteredBooks} filterYear={yearSelected} />\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Books;\r\n","import { useReducer, useState } from \"react\";\r\nimport \"./BookForm.css\";\r\n\r\nconst initialBookForm = {\r\n  title: \"\",\r\n  author: \"\",\r\n  dateRead: \"\",\r\n  pageCount: \"\",\r\n  formValid: false,\r\n};\r\n\r\nconst bookFormReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"TITLE_UPDATED\":\r\n      return {\r\n        ...state,\r\n        title: action.value,\r\n        formValid:\r\n          action.value && state.author && state.pageCount && state.dateRead,\r\n      };\r\n    case \"AUTHOR_UPDATED\":\r\n      return {\r\n        ...state,\r\n        author: action.value,\r\n        formValid:\r\n          action.value && state.title && state.pageCount && state.dateRead,\r\n      };\r\n    case \"DATE_READ_UPDATED\":\r\n      return {\r\n        ...state,\r\n        dateRead: action.value,\r\n        formValid:\r\n          action.value && state.author && state.pageCount && state.title,\r\n      };\r\n    case \"PAGE_COUNT_UPDATED\":\r\n      return {\r\n        ...state,\r\n        pageCount: action.value,\r\n        formValid:\r\n          action.value && state.author && state.title && state.dateRead,\r\n      };\r\n    case \"RESET_FORM\":\r\n      return initialBookForm;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst BookForm = ({ onBookDataSaved, onToggleForm }) => {\r\n  const [bookForm, dispatch] = useReducer(bookFormReducer, initialBookForm);\r\n\r\n  const submitBookHandler = (event) => {\r\n    event.preventDefault();\r\n    const bookData = {\r\n      title: bookForm.title,\r\n      author: bookForm.author,\r\n      pageCount: bookForm.pageCount,\r\n      dateRead: new Date(bookForm.dateRead),\r\n    };\r\n    onBookDataSaved(bookData);\r\n    dispatch({\r\n      type: \"RESET_FORM\",\r\n    });\r\n  };\r\n\r\n  const changeTitleHandler = (event) => {\r\n    dispatch({\r\n      type: \"TITLE_UPDATED\",\r\n      value: event.target.value,\r\n    });\r\n  };\r\n  const changeAuthorHandler = (event) => {\r\n    dispatch({\r\n      type: \"AUTHOR_UPDATED\",\r\n      value: event.target.value,\r\n    });\r\n  };\r\n  const changePageCountHandler = (event) => {\r\n    dispatch({\r\n      type: \"PAGE_COUNT_UPDATED\",\r\n      value: event.target.value,\r\n    });\r\n  };\r\n  const changeDateHandler = (event) => {\r\n    dispatch({\r\n      type: \"DATE_READ_UPDATED\",\r\n      value: event.target.value,\r\n    });\r\n  };\r\n  return (\r\n    <form>\r\n      <div className=\"new-book-controls\">\r\n        <div className=\"new-book-control\">\r\n          <label>Título</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-control\"\r\n            value={bookForm.title}\r\n            onChange={changeTitleHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-book-control\">\r\n          <label>Autor</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-control\"\r\n            value={bookForm.author}\r\n            onChange={changeAuthorHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-book-control\">\r\n          <label>Páginas</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"input-control\"\r\n            min=\"1\"\r\n            step=\"1\"\r\n            onChange={changePageCountHandler}\r\n            value={bookForm.pageCount}\r\n          />\r\n        </div>\r\n        <div className=\"new-book-control\">\r\n          <label>¿Cuándo terminaste de leerlo?</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"input-control\"\r\n            min=\"2019-01-01\"\r\n            max=\"2024-12-31\"\r\n            onChange={changeDateHandler}\r\n            value={bookForm.dateRead}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-book-actions\">\r\n        <button onClick={onToggleForm}>Cancelar</button>\r\n        <button\r\n          disabled={!bookForm.formValid}\r\n          onClick={submitBookHandler}\r\n          type=\"button\"\r\n        >\r\n          Agregar lectura\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BookForm;\r\n","import { memo, useState } from \"react\";\r\n\r\nimport \"./NewBook.css\";\r\n\r\nimport BookForm from \"./BookForm\";\r\n\r\nconst NewBook = memo(({ onBookAdded }) => {\r\n  console.log(\"new Book\");\r\n  const [showForm, setShowForm] = useState(false);\r\n  const saveBookDataHandler = (enteredBookData) => {\r\n    const bookData = {\r\n      ...enteredBookData,\r\n      id: Math.random().toString(),\r\n    };\r\n    onBookAdded(bookData);\r\n  };\r\n\r\n  const toggleShowForm = () => {\r\n    setShowForm(!showForm);\r\n  };\r\n\r\n  if (!showForm) {\r\n    return (\r\n      <div className=\"new-book\">\r\n        <button className=\"new-book-button\" onClick={toggleShowForm}>\r\n          Registrar nueva lectura\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-book\">\r\n      <BookForm\r\n        onToggleForm={toggleShowForm}\r\n        onBookDataSaved={saveBookDataHandler}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default NewBook;\r\n","import { createContext, useState } from \"react\";\r\n\r\nexport const APIContext = createContext();\r\n\r\nexport const APIContextProvider = ({ children }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const toggleLoading = (value) => {\r\n    setIsLoading(value);\r\n  };\r\n  return (\r\n    <APIContext.Provider value={{ isLoading, toggleLoading }}>\r\n      {children}\r\n    </APIContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport \"./Spinner.css\";\r\nimport { ThemeContext } from \"../context/AuthenticationContext/theme.context\";\r\n\r\nconst Spinner = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n  return (\r\n    <div className={`spinner ${theme === \"dark\" && \"dark-theme-spinner\"} `} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport Books from \"./components/books/Books\";\r\nimport NewBook from \"./components/form/NewBook\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { AuthenticationContext } from \"./components/context/AuthenticationContext/authentication.context\";\r\nimport { ThemeContext } from \"./components/context/AuthenticationContext/theme.context\";\r\nimport { APIContext } from \"./components/context/AuthenticationContext/api.context\";\r\nimport Spinner from \"./components/ui/Spinner\";\r\n\r\n// const DUMMY_BOOKS = [\r\n//   {\r\n//     id: \"a1\",\r\n//     title: \"100 años de soledad\",\r\n//     author: \"Gabriel García Marquez\",\r\n//     pageCount: 410,\r\n//     dateRead: new Date(2020, 7, 12),\r\n//   },\r\n//   {\r\n//     id: \"a2\",\r\n//     title: \"Todos los fuegos el fuego\",\r\n//     author: \"Julio Cortazar\",\r\n//     pageCount: 197,\r\n//     dateRead: new Date(2021, 6, 11),\r\n//   },\r\n//   {\r\n//     id: \"a3\",\r\n//     title: \"Asesinato en el Orient Express\",\r\n//     author: \"Agatha Christie\",\r\n//     pageCount: 256,\r\n//     dateRead: new Date(2020, 5, 9),\r\n//   },\r\n//   {\r\n//     id: \"a4\",\r\n//     title: \"Las dos torres\",\r\n//     author: \"J.R.R Tolkien\",\r\n//     pageCount: 352,\r\n//     dateRead: new Date(2021, 3, 22),\r\n//   },\r\n// ];\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const [books, setBooks] = useState([]);\r\n\r\n  const { user, handleLogout } = useContext(AuthenticationContext);\r\n  const { theme, toggleTheme } = useContext(ThemeContext);\r\n  const { isLoading, toggleLoading } = useContext(APIContext);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const username = user.email.split(\"@\")[0];\r\n\r\n  const addedBookHandler = useCallback(\r\n    (bookData) => {\r\n      const dateString = bookData.dateRead.toISOString().slice(0, 10);\r\n\r\n      fetch(\"https://63a44a012a73744b0072f847.mockapi.io/api/books/Books\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          title: bookData.title,\r\n          author: bookData.author,\r\n          dateRead: dateString,\r\n          pageCount: parseInt(bookData.pageCount, 10),\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) return response.json();\r\n          else {\r\n            throw new Error(\"The response has some errors!\");\r\n          }\r\n        })\r\n        .then(() => {\r\n          const newBooksArray = [bookData, ...books];\r\n          setBooks(newBooksArray);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    },\r\n    [books]\r\n  );\r\n\r\n  const logOutHandler = () => {\r\n    handleLogout();\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    toggleLoading(true);\r\n    fetch(\"https://63a44a012a73744b0072f847.mockapi.io/api/books/Books\", {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((bookData) => {\r\n        toggleLoading(false);\r\n        const booksMapped = bookData.map((book) => ({\r\n          ...book,\r\n          dateRead: new Date(book.dateRead),\r\n        }));\r\n        setBooks(booksMapped);\r\n      })\r\n      .catch((error) => {\r\n        toggleLoading(false);\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Spinner />}\r\n      <Row>\r\n        <Col>\r\n          <h4 className=\"text-left m-3\">Hola {username}!</h4>\r\n          <Button onClick={toggleTheme}>Cambiar tema</Button>\r\n        </Col>\r\n        <Col md={3} className=\"mx-3 d-flex justify-content-end\">\r\n          <Button className=\"m-4\" variant=\"primary\" onClick={logOutHandler}>\r\n            Cerrar Sesión\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <h2>Books Champion App</h2>\r\n      <NewBook onBookAdded={addedBookHandler} />\r\n      <Books books={books} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useContext } from \"react\";\r\nimport { Navigate } from \"react-router\";\r\nimport { AuthenticationContext } from \"../context/AuthenticationContext/authentication.context\";\r\n\r\nconst Protected = ({ children }) => {\r\n  const { user } = useContext(AuthenticationContext);\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  } else {\r\n    return children;\r\n  }\r\n};\r\n\r\nexport default Protected;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nimport \"./PageNotFound.css\";\r\n\r\nconst PageNotFound = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const backToHomePageHandler = () => {\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container404\">\r\n      <h2 className=\"my-4\">¡Oops! La página solicitada no fue encontrada</h2>\r\n      <Button onClick={backToHomePageHandler} variant=\"primary\">\r\n        Volver a iniciar sesión\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import {\r\n  createBrowserRouter,\r\n  Navigate,\r\n  RouterProvider,\r\n} from \"react-router-dom\";\r\n\r\nimport Login from \"./components/form/Login\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport Protected from \"./components/security/Protected\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport { useContext } from \"react\";\r\nimport PageNotFound from \"./components/errors/PageNotFound\";\r\nimport { ThemeContext } from \"./components/context/AuthenticationContext/theme.context\";\r\nimport { APIContext } from \"./components/context/AuthenticationContext/api.context\";\r\n\r\nconst App = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n  const { isLoading } = useContext(APIContext);\r\n\r\n  const router = createBrowserRouter([\r\n    { path: \"/\", element: <Navigate to=\"login\" /> },\r\n    { path: \"/login\", element: <Login /> },\r\n    {\r\n      path: \"/home\",\r\n      element: (\r\n        <Protected>\r\n          <Dashboard />\r\n        </Protected>\r\n      ),\r\n    },\r\n    {\r\n      path: \"*\",\r\n      element: <PageNotFound />,\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`${theme === \"dark\" && \"dark-theme\"} ${\r\n          isLoading && \"opacity-80\"\r\n        }`}\r\n      >\r\n        <RouterProvider router={router} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n// Put any other imports below so that CSS from your\r\n// components takes precedence over default styles.\r\nimport App from \"./App\";\r\nimport { AuthenticationContextProvider } from \"./components/context/AuthenticationContext/authentication.context\";\r\nimport { ThemeContextProvider } from \"./components/context/AuthenticationContext/theme.context\";\r\nimport { APIContextProvider } from \"./components/context/AuthenticationContext/api.context\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthenticationContextProvider>\r\n      <ThemeContextProvider>\r\n        <APIContextProvider>\r\n          <App />\r\n        </APIContextProvider>\r\n      </ThemeContextProvider>\r\n    </AuthenticationContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}